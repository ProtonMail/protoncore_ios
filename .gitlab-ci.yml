include:
  - project: "proton/devops/atlas-deploy"
    ref: main
    file: "/scenarios/pipeline-env.yml"
  - project: "translations/generator"
    ref: master
    file: "/jobs/sync-crowdin.gitlab-ci.yml"

  - project: "translations/generator"
    ref: master
    file: "/jobs/commit-locales.gitlab-ci.yml"


stages:
  - i18n
  - release_tagging_and_publishing
  - mirror_main_to_github
  - mirror_develop_to_github
  - linting
  - preparing_environment
  - unit_testing
  - building_subspecs
  - deploy
  - ui_testing
  - cleanup
  
variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  GEM_HOME: "$CI_PROJECT_DIR/gem"
  ATLAS_DEPLOY_SCOPE: "qa-core-iOS-auto-$CI_PIPELINE_IID"
  ATLAS_DEPLOY_LIST: ""

release_tagging_and_publishing:
  stage: release_tagging_and_publishing
  needs: []
  artifacts:
    when: always
    name: "ReleaseNotes-$CI_COMMIT_SHA"
    paths:
      - ReleaseNotes.md
    expire_in: never
  script:
    - git remote set-url origin https://protoncore:$PROTONCORE_ACCESS_TOKEN@${PROTON_GIT_URL}/apple/shared/protoncore.git
    - git remote -v
    - bash scripts/make_release_tags.sh
    - bash scripts/generate_and_publish_release_notes.sh
  <<: &release_jobs
    rules:
      - if: '$CI_PIPELINE_SOURCE == "web"'
        when: never
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: never
      - if: '$CI_COMMIT_BRANCH == "main"'
        when: always
      - if: "$CI_COMMIT_BRANCH"
        when: never
    allow_failure: false
    interruptible: false
    variables:
      GIT_STRATEGY: clone
    tags:
      - iOS-cloud

mirror_main_to_github:
  stage: mirror_main_to_github
  needs:
    - job: release_tagging_and_publishing
      artifacts: false
  script:
    - bash scripts/mirror_to_github.sh main
  <<: *release_jobs

mirror_develop_to_github:
  stage: mirror_develop_to_github
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always
    - if: "$CI_COMMIT_BRANCH"
      when: never
  allow_failure: false
  interruptible: false
  needs: []
  variables:
    GIT_STRATEGY: clone
  script:
    - bash scripts/mirror_to_github.sh develop
  tags:
    - iOS-cloud

linting:
  stage: linting
  script: tools/portable_swiftlint/swiftlint --config .swiftlint.yml --reporter junit > swiftlint.xml
  rules: &rules_commit_and_mr
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: never
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH"
  needs: []
  allow_failure: false
  interruptible: true
  artifacts:
    name: "ios-lint-$CI_COMMIT_SHA"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days
  tags:
    - iOS-cloud

preparing_environment:
  dependencies: []
  stage: preparing_environment
  script:
    - rm -rf ../pmconstants
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${PROTON_GIT_URL}/apple/shared/pmconstants ../pmconstants
    - pod repo update
  tags:
    - iOS-cloud
  allow_failure: false
  interruptible: true
  needs:
    - job: linting
      artifacts: false
  rules: *rules_commit_and_mr

building_subspecs_full_1:
  script:
    - fastlane ios lint_subspecs_full_1
  <<: &building_subspecs_full
    dependencies: []
    stage: building_subspecs
    retry: 1
    rules:
      - if: '$CI_PIPELINE_SOURCE == "web"'
        when: never
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: never
      - if: '$CI_COMMIT_BRANCH == "main"'
        when: never
      - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
        when: never
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      - if: "$CI_COMMIT_BRANCH"
        when: never
    allow_failure: false
    interruptible: true
    needs:
      - job: unit_testing
        artifacts: false
    tags:
      - iOS-cloud

building_subspecs_full_2:
  script:
    - fastlane ios lint_subspecs_full_2
  <<: *building_subspecs_full

building_subspecs_full_3:
  script:
    - fastlane ios lint_subspecs_full_3
  <<: *building_subspecs_full

building_subspecs_full_4:
  script:
    - fastlane ios lint_subspecs_full_4
  <<: *building_subspecs_full

building_subspecs_full_5:
  script:
    - fastlane ios lint_subspecs_full_5
  <<: *building_subspecs_full

building_subspecs_lite_1:
  script:
    - fastlane ios lint_subspecs_lite_1
  <<: &building_subspecs_lite
    dependencies: []
    stage: building_subspecs
    retry: 1
    rules:
      - if: '$CI_PIPELINE_SOURCE == "web"'
        when: never
      - if: '$CI_PIPELINE_SOURCE == "schedule"'
        when: never
      - if: '$CI_COMMIT_BRANCH == "main"'
        when: never
      - if: '$CI_COMMIT_BRANCH == "develop"'
        when: never
      - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
        when: never
      - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        when: never
      - if: "$CI_COMMIT_BRANCH"
    allow_failure: false
    interruptible: true
    needs:
      - job: unit_testing
        artifacts: false
    tags:
      - iOS-cloud

building_subspecs_lite_2:
  script:
    - fastlane ios lint_subspecs_lite_2
  <<: *building_subspecs_lite

building_subspecs_lite_3:
  script:
    - fastlane ios lint_subspecs_lite_3
  <<: *building_subspecs_lite

building_subspecs_lite_4:
  script:
    - fastlane ios lint_subspecs_lite_4
  <<: *building_subspecs_lite

building_subspecs_lite_5:
  script:
    - fastlane ios lint_subspecs_lite_5
  <<: *building_subspecs_lite

unit_testing:
  dependencies: []
  stage: unit_testing
  retry: 2
  rules: *rules_commit_and_mr
  allow_failure: false
  interruptible: true
  needs:
    - job: preparing_environment
      artifacts: false
  script:
    - fastlane test
    - fastlane/print-coverage.sh fastlane/test_output/PMAuthentication.test_result/3_Test/action.xccovreport
  after_script:
    - rm -rf ~/ProtonCore/UnitTests/$CI_PIPELINE_IID/DerivedData/
  artifacts:
    name: "ios-tests-$CI_COMMIT_SHA"
    when: always
    paths:
      - fastlane/test_output/
    expire_in: 3 days
    reports:
      junit:
        - fastlane/test_output/report.junit
  tags:
    - iOS-cloud

deploy:review:
  needs: []
  interruptible: false
  retry: 1
  rules: &rules_deploy_cleanup
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always
    - if: '$CI_PIPELINE_SOURCE'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: never

# ui tests smoke is run on merge to develop
ui_testing_smoke:
  rules: 
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: never
  script:
    - bash scripts/run_ui_tests_on_ci.sh --smoke
  <<: &ui_testing_common_configuration
    stage: ui_testing
    allow_failure: false
    interruptible: true
    needs:
      - job: preparing_environment
        artifacts: false
      - job: deploy:review
        artifacts: true
    artifacts:
      when: always
      name: "test-report-$CI_PIPELINE_IID"
      paths:
        - UITestsResults-${CI_PIPELINE_IID}.xcresult
      expire_in: 20 days
    after_script:
      - rm -rf ~/ProtonCore/UITests/${CI_PIPELINE_IID}/DerivedData/
    tags:
      - iOS-cloud

# ui tests regression is run only on schedules
ui_testing_regression:
  rules: 
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      when: never
  timeout: 3 hours 30 minutes
  script:
    - bash scripts/run_ui_tests_on_ci.sh --regression
  <<: *ui_testing_common_configuration

cleanup:review:
  needs:
    - job: deploy:review
      artifacts: true
    - job: ui_testing_smoke
      artifacts: false
      optional: true
    - job: ui_testing_regression
      artifacts: false
      optional: true
  interruptible: false
  rules: *rules_deploy_cleanup

# --- Translation related tasks ---
i18n-sync-crowdin:
  stage: i18n
  variables:
    I18N_SYNC_CROWDIN_PROJECT: "apple-core"
  extends: .i18n-sync-crowdin-shared-apple
  tags:
    - iOS-cloud

i18n-commit-locales:
  stage: i18n
  variables:
    I18N_COMMIT_CROWDIN_PROJECT: "apple-core"
  extends: .i18n-commit-locales-shared-apple
  tags:
    - iOS-cloud