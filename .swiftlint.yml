disabled_rules: # rule identifiers to exclude from running
  - file_length # https://github.com/realm/SwiftLint/blob/master/Rules.md#file-line-length
  - line_length # https://github.com/realm/SwiftLint/blob/master/Rules.md#line-length
  - type_name # https://github.com/realm/SwiftLint/blob/master/Rules.md#type-name
  - type_body_length # https://github.com/realm/SwiftLint/blob/master/Rules.md#type-body-length
  - identifier_name # https://github.com/realm/SwiftLint/blob/master/Rules.md#identifier-name
  - trailing_whitespace # https://github.com/realm/SwiftLint/blob/master/Rules.md#trailing-whitespace
  - notification_center_detachment # https://github.com/realm/SwiftLint/blob/master/Rules.md#notification-center-detachment
  - trailing_comma # https://github.com/realm/SwiftLint/blob/master/Rules.md#trailing-comma
  - multiline_arguments # https://github.com/realm/SwiftLint/blob/master/Rules.md#multiline-arguments
  - unused_closure_parameter # https://github.com/realm/SwiftLint/blob/master/Rules.md#unused-closure-parameter
  - discouraged_optional_collection # https://github.com/realm/SwiftLint/blob/master/Rules.md#discouraged-optional-collection
  - force_cast # https://github.com/realm/SwiftLint/blob/master/Rules.md#force-cast
  - no_fallthrough_only # https://github.com/realm/SwiftLint/blob/master/Rules.md#no-fallthrough-only
  - opening_brace
  - nesting
# these rules were temporarily disabled
  - force_try
  - empty_count
# This need to be enabled later
  - todo
  - large_tuple
  - multiple_closures_with_trailing_closure
  - xctfail_message


opt_in_rules: # some rules are only opt-in
  - empty_count # https://github.com/realm/SwiftLint/blob/master/Rules.md#empty-count
  - closure_end_indentation # https://github.com/realm/SwiftLint/blob/master/Rules.md#closure-end-indentation
  - closure_spacing # https://github.com/realm/SwiftLint/blob/master/Rules.md#closure-spacing
  - collection_alignment # https://github.com/realm/SwiftLint/blob/master/Rules.md#collection-element-alignment
  - empty_string # https://github.com/realm/SwiftLint/blob/master/Rules.md#empty-string
  - empty_xctest_method # https://github.com/realm/SwiftLint/blob/master/Rules.md#empty-xctest-method
  - literal_expression_end_indentation # https://github.com/realm/SwiftLint/blob/master/Rules.md#literal-expression-end-indentation
  - modifier_order # https://github.com/realm/SwiftLint/blob/master/Rules.md#modifier-order
  - operator_usage_whitespace # https://github.com/realm/SwiftLint/blob/master/Rules.md#operator-usage-whitespace
  - overridden_super_call # https://github.com/realm/SwiftLint/blob/master/Rules.md#overridden-methods-call-super
  - prohibited_super_call # https://github.com/realm/SwiftLint/blob/master/Rules.md
  - sorted_first_last # https://github.com/realm/SwiftLint/blob/master/Rules.md
  - unavailable_condition # https://realm.github.io/SwiftLint/unavailable_condition.html
  - file_header

# Some rules that may be useful:
  # - file_types_order # https://github.com/realm/SwiftLint/blob/master/Rules.md#file-types-order
  # - implicit_return # https://github.com/realm/SwiftLint/blob/master/Rules.md#implicit-return
  # - type_contents_order # https://github.com/realm/SwiftLint/blob/master/Rules.md#type-contents-order

# More rules can be found here: https://github.com/realm/SwiftLint/blob/master/Rules.md

included: # paths to include during linting. `--path` is ignored if present.
  - libraries/AccountDeletion
  - libraries/AccountSwitcher
  - libraries/APIClient
  - libraries/Authentication
  - libraries/Authentication-KeyGeneration
  - libraries/Challenge
  - libraries/Common
  - libraries/CoreTranslation
  - libraries/Crypto
  - libraries/DataModel
  - libraries/Doh
  - libraries/ErrorWarningEmittingDefaultSubspec
  - libraries/Features
  - libraries/ForceUpgrade
  - libraries/Foundations
  - libraries/Hash
  - libraries/HumanVerification
  - libraries/Keymaker
  - libraries/KeyManager
  - libraries/Log
  - libraries/Login
  - libraries/LoginUI
  - libraries/Networking
  - libraries/ObfuscatedConstants
  - libraries/Payments
  - libraries/PaymentsUI
  - libraries/QuarkCommands
  - libraries/Services
  - libraries/Settings
  - libraries/TroubleShooting
  - libraries/TestingToolkit
  - libraries/UIFoundations
  - libraries/Utilities
  - libraries/Observability
  ### create pod add library placeholder
  # - example-app
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - Package.swift
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)

cyclomatic_complexity:
  warning: 20
  error: 30
  
function_body_length:
  warning: 120
  error: 150


custom_rules:
  no_print:
    name: "Printing to console"
    message: "No direct printing to console is allowed. Please use PMLog class from vpncore library."
    regex: "(^\\s*print\\()|(NSLog)"
    match_kinds:
      - identifier

file_header:
  severity: error
  required_pattern: |
                    \/\/
                    \/\/  .*?\.swift
                    \/\/  ProtonCore.* - Created on \d{1,4}.\d{1,2}.\d{2,4}.?
                    \/\/
                    \/\/  Copyright \(c\) \d{4} Proton Technologies AG
                    \/\/
                    \/\/  This file is part of Proton Technologies AG and ProtonCore\.
                    \/\/
                    \/\/  ProtonCore is free software: you can redistribute it and\/or modify
                    \/\/  it under the terms of the GNU General Public License as published by
                    \/\/  the Free Software Foundation, either version 3 of the License, or
                    \/\/  \(at your option\) any later version\.
                    \/\/
                    \/\/  ProtonCore is distributed in the hope that it will be useful,
                    \/\/  but WITHOUT ANY WARRANTY; without even the implied warranty of
                    \/\/  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\..? See the
                    \/\/  GNU General Public License for more details\.
                    \/\/
                    \/\/  You should have received a copy of the GNU General Public License
                    \/\/  along with ProtonCore\..? If not, see <?https:\/\/www\.gnu\.org\/licenses\/>?\.
          
