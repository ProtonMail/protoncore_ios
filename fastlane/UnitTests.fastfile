lane :run_unit_tests_locally do
  sh("mkdir", "-p", "fastlane/DerivedData")
  sh("bash", "../scripts/generate_obfuscated_constants.sh")
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace", 
    scheme: "Example-UnitTests", 
    derived_data_path: "fastlane/DerivedData",
    device: 'iPhone 11 (15.5)',
    build_for_testing: true,
    code_coverage: true,
    result_bundle: true
  )
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace", 
    scheme: "Example-UnitTests", 
    derived_data_path: "fastlane/DerivedData",
    device: 'iPhone 11 (15.5)',
    clean: false, 
    skip_build: true,
    code_coverage: true,
    result_bundle: true
  )
  sh("rm", "-rf", "fastlane/DerivedData")
end

lane :run_localization_tests_locally do
  sh("mkdir", "-p", "fastlane/DerivedData")
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    testplan: "Example-UnitTests-Localization",
    derived_data_path: "fastlane/DerivedData",
    prelaunch_simulator: false,
    device: 'iPhone 11',
    build_for_testing: true,
    code_coverage: false,
    result_bundle: false
  )
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    testplan: "Example-UnitTests-Localization",
    derived_data_path: "fastlane/DerivedData",
    prelaunch_simulator: false,
    device: 'iPhone 11',
    clean: false,
    skip_build: true,
    code_coverage: false,
    result_bundle: false
  )
  sh("rm", "-rf", "fastlane/DerivedData")
end

def default_destination
  "platform=iOS Simulator,name=iPhone 11,OS=15.5"
end

def derived_data_path(prefix)
  pipeline_id = ENV['CI_PIPELINE_IID'] || "9999" # for local runs
  Dir.home + "/ProtonCore/" + prefix + "/" + pipeline_id + "/DerivedData/"
end

def create_derived_data_folder(prefix)
  sh("echo", derived_data_path(prefix))
  sh("mkdir", "-p", derived_data_path(prefix))
end

def delete_derived_data_folder(prefix)
  clear_derived_data(
    derived_data_path: derived_data_path(prefix)
  )
  sh("rm", "-rf", derived_data_path(prefix))
end

def prepare_for_building
  sh("bash", "../scripts/generate_obfuscated_constants.sh")
  bundle_install(gemfile: "fastlane/Gemfile")
end

lane :build_mac do
  create_derived_data_folder("Mac")
  prepare_for_building
  build_app(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-macOS-Mail",
    derived_data_path: derived_data_path("Mac"),
    clean: true,
    skip_archive: true,
    skip_codesigning: true
  )
end

lane :cleanup_build_mac do
  delete_derived_data_folder("Mac")
end

lane :build_ios do
  create_derived_data_folder("iOS")
  prepare_for_building
  build_app(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-iOS-Mail-AppStoreIAP",
    derived_data_path: derived_data_path("iOS"),
    destination: default_destination,
    clean: true,
    skip_archive: true,
    skip_codesigning: true
  )
end

lane :cleanup_build_ios do
  delete_derived_data_folder("iOS")
end

lane :build_mac_ios14macos11 do
  create_derived_data_folder("macos_ios14macos11")
  prepare_for_building
  build_app(
    workspace: "example-app/example-app-ios14macos11/ExampleApp.xcworkspace",
    scheme: "Example-macOS-Mail",
    derived_data_path: derived_data_path("macos_ios14macos11"),
    clean: true,
    skip_archive: true,
    skip_codesigning: true
  )
end

lane :cleanup_build_mac_ios14macos11 do
  delete_derived_data_folder("macos_ios14macos11")
end

lane :build_ios_ios14macos11 do
  create_derived_data_folder("iOS_ios14macos11")
  prepare_for_building
  build_app(
    workspace: "example-app/example-app-ios14macos11/ExampleApp.xcworkspace",
    scheme: "Example-iOS-Mail-AppStoreIAP",
    derived_data_path: derived_data_path("iOS_ios14macos11"),
    destination: default_destination,
    clean: true,
    skip_archive: true,
    skip_codesigning: true
  )
end

lane :cleanup_build_ios_ios14macos11 do
  delete_derived_data_folder("iOS_ios14macos11")
end

lane :build_ui_tests do
  create_derived_data_folder("UITestsOnlyBuild")
  prepare_for_building
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UITests",
    derived_data_path: derived_data_path("UITestsOnlyBuild"),
    device: 'iPhone 11',
    build_for_testing: true,
    clean: false
  )
end

lane :cleanup_build_ui_tests do
  delete_derived_data_folder("UITestsOnlyBuild")
end

lane :run_unit_tests do
  create_derived_data_folder("UnitTests")
  prepare_for_building
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    derived_data_path: derived_data_path("UnitTests"),
    build_for_testing: true,
    code_coverage: true,
    result_bundle: true
  )
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    clean: false,
    skip_build: true,
    derived_data_path: derived_data_path("UnitTests"),
    prelaunch_simulator: true,
    device: 'iPhone 11',
    code_coverage: true,
    result_bundle: true
  )
end

lane :cleanup_run_unit_tests do
  delete_derived_data_folder("UnitTests")
end

lane :run_localization_tests do
  create_derived_data_folder("LocalizationTests")
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    testplan: "Example-UnitTests-Localization",
    derived_data_path: derived_data_path("LocalizationTests"),
    prelaunch_simulator: false,
    device: 'iPhone 11',
    build_for_testing: true,
    code_coverage: false,
    result_bundle: false
  )
  run_tests(
    workspace: "example-app/example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    testplan: "Example-UnitTests-Localization",
    derived_data_path: derived_data_path("LocalizationTests"),
    prelaunch_simulator: false,
    device: 'iPhone 11',
    clean: false,
    skip_build: true,
    code_coverage: false,
    result_bundle: false
  )
end

lane :cleanup_run_localization_tests do
  delete_derived_data_folder("LocalizationTests")
end

