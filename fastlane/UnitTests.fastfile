lane :run_unit_tests_locally do
  sh("bash", "../scripts/generate_obfuscated_constants.sh")
  run_tests(
    workspace: "example-app/ExampleApp.xcworkspace", 
    scheme: "Example-UnitTests", 
    derived_data_path: "fastlane/DerivedData",
    build_for_testing: true,
    code_coverage: true,
    result_bundle: true
  )
  run_tests(
    workspace: "example-app/ExampleApp.xcworkspace", 
    scheme: "Example-UnitTests", 
    derived_data_path: "fastlane/DerivedData",
    clean: false, 
    skip_build: true,
    code_coverage: true,
    result_bundle: true
  )
  sh("rm", "-rf", "fastlane/DerivedData")
end

def derived_data_path
  "/Users/administrator/ProtonCore/UnitTests/" + ENV['CI_PIPELINE_IID'] + "/DerivedData/"
end

lane :prepare_for_unit_tests do
  sh("echo", derived_data_path)
  sh("mkdir", "-p", derived_data_path)
  sh("bash", "../scripts/generate_obfuscated_constants.sh")
  bundle_install(gemfile: "fastlane/Gemfile")
end

lane :run_unit_tests do
  build_app(
    workspace: "example-app/ExampleApp.xcworkspace",
    scheme: "Example-macOS-Mail",
    derived_data_path: derived_data_path,
    clean: true,
    skip_archive: true,
    skip_codesigning: true
  )
  run_tests(
    workspace: "example-app/ExampleApp.xcworkspace",
    scheme: "Example-UITests",
    derived_data_path: derived_data_path,
    build_for_testing: true,
    device: "iPhone 11",
    clean: false
  )
  run_tests(
    workspace: "example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    derived_data_path: derived_data_path,
    build_for_testing: true,
    code_coverage: true,
    result_bundle: true
  )
  run_tests(
    workspace: "example-app/ExampleApp.xcworkspace",
    scheme: "Example-UnitTests",
    clean: false,
    skip_build: true,
    derived_data_path: derived_data_path,
    code_coverage: true,
    result_bundle: true
  )
end

lane :cleanup_after_unit_tests do
  clear_derived_data(
    derived_data_path: derived_data_path
  )
  sh("rm", "-rf", derived_data_path)
end
