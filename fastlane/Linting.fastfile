require_relative '../pods_configuration'

def no_test_podspecs
  "fastlane/UsedOnlyForLintingAndNotForTheActualWork/TrustKit.podspec"
end

def default_test_podspecs
  ",ProtonCore-ObfuscatedConstants.podspec,ProtonCore-TestingToolkit.podspec,fastlane/UsedOnlyForLintingAndNotForTheActualWork/TrustKit.podspec,swift-snapshot-testing.podspec"
end

def crypto_subspec_for_single_variant
  crypto_subspec(:crypto_vpn_go_1_18_3)
end

def crypto_subspecs_for_all_variants
  [
    :crypto_go_1_18_3,
    :crypto_vpn_go_1_18_3,
    :crypto_search_go_1_18_3
  ]
  .map { |symbol| crypto_subspec(symbol) }
end

def build_spec(name, platforms, test_podspecs, *additional_podspecs)
  # ProtonCore-TestingToolkit.podspec is added as implicit dependency to everything, otherwise the linting complains that it cannot resolve test_spec dependencies
  dependencies = sh("ruby", "../scripts/identify_local_podspecs.rb", "../ProtonCore-#{name}.podspec").lines.last.strip
                    .gsub("}",",#{additional_podspecs.map { |e| "ProtonCore-" + e + ".podspec"  }.join(',')}#{test_podspecs}}")
                    .gsub(",,",",") 
                    .gsub("{,","{")
                    .gsub(",}","}")
  pod_lib_lint(
    podspec: "ProtonCore-#{name}.podspec",
    allow_warnings: true,
    skip_tests: true,
    platforms: platforms,
    include_podspecs: dependencies,
    no_subspecs: true
  )
end

def build_subspec(name, subspec, platforms, test_podspecs, *additional_podspecs)
  # ProtonCore-TestingToolkit.podspec is added as implicit dependency to everything, otherwise the linting complains that it cannot resolve test_spec dependencies
  dependencies = sh("ruby", "../scripts/identify_local_podspecs.rb", "../ProtonCore-#{name}.podspec", subspec).lines.last.strip
                    .gsub("}",",#{additional_podspecs.map { |e| "ProtonCore-" + e + ".podspec"  }.join(',')}#{test_podspecs}}")
                    .gsub("{,","{") 
                    .gsub(",,",",")
                    .gsub(",}","}")
  pod_lib_lint(
    podspec: "ProtonCore-#{name}.podspec",
    allow_warnings: true,
    skip_tests: true,
    platforms: platforms,
    subspec: subspec,
    include_podspecs: dependencies
  )
end

private_lane :install_dependencies_from_gemfile do
  bundle_install(gemfile: "fastlane/Gemfile")
end

lane :build_AccountDeletion_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("AccountDeletion-V5", crypto_subspec, "ios,macos", default_test_podspecs)
  }
end 

lane :build_AccountDeletion_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("AccountDeletion-V5", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end 

lane :build_AccountSwitcher_all_variants do
  install_dependencies_from_gemfile
  build_spec("AccountSwitcher-V5", "ios", no_test_podspecs)
end

lane :build_AccountSwitcher_single_basic_variant do
  build_AccountSwitcher_all_variants
end

lane :build_APIClient_all_variants do
  install_dependencies_from_gemfile
  build_spec("APIClient", "ios,macos", default_test_podspecs, "GoLibs", "Authentication")
end

lane :build_APIClient_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("APIClient", "ios", default_test_podspecs, "GoLibs", "Authentication")
end

lane :build_Authentication_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Authentication", crypto_subspec, "ios,macos", default_test_podspecs)
  }
end

lane :build_Authentication_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Authentication", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_Authentication_KeyGeneration_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Authentication-KeyGeneration", crypto_subspec, "ios,macos", default_test_podspecs)
  }
end

lane :build_Authentication_KeyGeneration_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Authentication-KeyGeneration", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_Challenge_all_variants do
  install_dependencies_from_gemfile
  build_spec("Challenge", "ios", no_test_podspecs)
end

lane :build_Challenge_single_basic_variant do
  build_Challenge_all_variants
end

lane :build_Common_all_variants do
  install_dependencies_from_gemfile
  build_spec("Common-V5", "ios,macos", no_test_podspecs)
end

lane :build_Common_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Common-V5", "ios", no_test_podspecs)
end

lane :build_CoreTranslation_all_variants do
  install_dependencies_from_gemfile
  build_spec("CoreTranslation", "ios,macos", no_test_podspecs)
  build_spec("CoreTranslation-V5", "ios,macos", no_test_podspecs)
end

lane :build_CoreTranslation_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("CoreTranslation", "ios", no_test_podspecs)
end

lane :build_DataModel_all_variants do
  install_dependencies_from_gemfile
  build_spec("DataModel", "ios,macos", default_test_podspecs)
end

lane :build_DataModel_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("DataModel", "ios", default_test_podspecs)
end

lane :build_Doh_all_variants do
  install_dependencies_from_gemfile
  build_spec("Doh", "ios,macos", default_test_podspecs)
end

lane :build_Doh_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Doh", "ios", default_test_podspecs)
end

lane :build_Features_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Features-V5", crypto_subspec, "ios,macos", no_test_podspecs)
  }
end

lane :build_Features_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Features-V5", crypto_subspec_for_single_variant, "ios", no_test_podspecs)
end

lane :build_ForceUpgrade_all_variants do
  install_dependencies_from_gemfile
  build_spec("ForceUpgrade-V5", "ios,macos", no_test_podspecs)
end

lane :build_ForceUpgrade_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("ForceUpgrade-V5", "ios", no_test_podspecs)
end

lane :build_Foundations_all_variants do
  install_dependencies_from_gemfile
  build_spec("Foundations", "ios,macos", no_test_podspecs)
end

lane :build_Foundations_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Foundations", "ios", no_test_podspecs)
end

lane :build_GoLibs_all_variants do
  install_dependencies_from_gemfile
  all_go_variants
  .map { |symbol| crypto_subspec(symbol) }
  .map { |crypto_subspec| 
    build_subspec("GoLibs", crypto_subspec, "ios,macos", no_test_podspecs)
  }
end

lane :build_GoLibs_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("GoLibs", crypto_subspec_for_single_variant, "ios", no_test_podspecs)
end

lane :build_Hash_all_variants do
  install_dependencies_from_gemfile
  build_spec("Hash", "ios,macos", no_test_podspecs)
end

lane :build_Hash_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Hash", "ios", no_test_podspecs)
end

lane :build_HumanVerification_all_variants do
  install_dependencies_from_gemfile
  build_spec("HumanVerification-V5", "ios,macos", default_test_podspecs)
end

lane :build_HumanVerification_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("HumanVerification-V5", "ios", default_test_podspecs)
end

lane :build_Keymaker_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Keymaker", crypto_subspec, "ios,macos", no_test_podspecs)
  }
end

lane :build_Keymaker_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Keymaker", crypto_subspec_for_single_variant, "ios", no_test_podspecs)
end

lane :build_KeyManager_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("KeyManager", crypto_subspec, "ios,macos", no_test_podspecs)
  }
end

lane :build_KeyManager_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("KeyManager", crypto_subspec_for_single_variant, "ios", no_test_podspecs)
end

lane :build_Log_all_variants do
  install_dependencies_from_gemfile
  build_spec("Log", "ios,macos", no_test_podspecs)
end

lane :build_Log_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Log", "ios", no_test_podspecs)
end

lane :build_Login_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Login", crypto_subspec, "ios,macos", default_test_podspecs)
  }
end

lane :build_Login_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Login", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_LoginUI_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("LoginUI-V5", crypto_subspec, "ios", default_test_podspecs)
  }
end

lane :build_LoginUI_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("LoginUI-V5", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_Networking_all_variants do
  install_dependencies_from_gemfile
  build_spec("Networking", "ios,macos", default_test_podspecs, "Utilities", "Doh", "Services", "APIClient", "Log", "DataModel")
end

lane :build_Networking_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Networking", "ios", default_test_podspecs, "Utilities", "Doh", "Services", "APIClient", "Log", "DataModel")
end

lane :build_ObfuscatedConstants_all_variants do
  install_dependencies_from_gemfile
  build_spec("ObfuscatedConstants", "ios,macos", no_test_podspecs)
end

lane :build_ObfuscatedConstants_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("ObfuscatedConstants", "macos", no_test_podspecs)
end

lane :build_OpenPGP_all_variants do
  install_dependencies_from_gemfile
  build_spec("OpenPGP", "ios,macos", no_test_podspecs)
end

lane :build_OpenPGP_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("OpenPGP", "ios", no_test_podspecs)
end

lane :build_Payments_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("Payments", crypto_subspec, "ios,macos", default_test_podspecs)
  }
end

lane :build_Payments_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("Payments", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_PaymentsUI_all_variants do
  install_dependencies_from_gemfile
  crypto_subspecs_for_all_variants.map { |crypto_subspec| 
    build_subspec("PaymentsUI-V5", crypto_subspec, "ios", default_test_podspecs)
  }
end

lane :build_PaymentsUI_single_basic_variant do
  install_dependencies_from_gemfile
  build_subspec("PaymentsUI-V5", crypto_subspec_for_single_variant, "ios", default_test_podspecs)
end

lane :build_QuarkCommands_all_variants do
  install_dependencies_from_gemfile
  build_spec("QuarkCommands", "ios,macos", default_test_podspecs)
end

lane :build_QuarkCommands_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("QuarkCommands", "ios", default_test_podspecs)
end

lane :build_Services_all_variants do
  install_dependencies_from_gemfile
  build_spec("Services", "ios,macos", default_test_podspecs)
end

lane :build_Services_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Services", "ios", default_test_podspecs)
end

lane :build_Settings_all_variants do
  install_dependencies_from_gemfile
  build_spec("Settings-V5", "ios", default_test_podspecs)
end

lane :build_Settings_single_basic_variant do
  build_Settings_all_variants
end

lane :build_TroubleShooting_all_variants do
  install_dependencies_from_gemfile
  build_spec("TroubleShooting", "ios", default_test_podspecs)
end

lane :build_TroubleShooting_single_basic_variant do
  build_TroubleShooting_all_variants
end

lane :build_UIFoundations_all_variants do
  install_dependencies_from_gemfile
  build_spec("UIFoundations-V5", "ios,macos", no_test_podspecs)
end

lane :build_UIFoundations_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("UIFoundations-V5", "ios", no_test_podspecs)
end

lane :build_Utilities_all_variants do
  install_dependencies_from_gemfile
  build_spec("Utilities", "ios,macos", no_test_podspecs)
end

lane :build_Utilities_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("Utilities", "ios", no_test_podspecs)
end

lane :build_VCard_all_variants do
  install_dependencies_from_gemfile
  build_spec("VCard", "ios,macos", no_test_podspecs)
end

lane :build_VCard_single_basic_variant do
  install_dependencies_from_gemfile
  build_spec("VCard", "ios", no_test_podspecs)
end

lane :build_all_subspecs_all_variants do
  build_AccountDeletion_all_variants
  build_AccountSwitcher_all_variants
  build_APIClient_all_variants
  build_Authentication_all_variants
  build_Authentication_KeyGeneration_all_variants
  build_Challenge_all_variants
  build_Common_all_variants
  build_CoreTranslation_all_variants
  build_Crypto_all_variants
  build_Crypto_VPN_all_variants
  build_DataModel_all_variants
  build_Doh_all_variants
  build_Features_all_variants
  build_ForceUpgrade_all_variants
  build_Foundations_all_variants
  build_Hash_all_variants
  build_HumanVerification_all_variants
  build_Keymaker_all_variants
  build_KeyManager_all_variants
  build_Log_all_variants
  build_Login_all_variants
  build_LoginUI_all_variants
  build_Networking_all_variants
  build_ObfuscatedConstants_all_variants
  build_OpenPGP_all_variants
  build_Payments_all_variants
  build_PaymentsUI_all_variants
  build_QuarkCommands_all_variants
  build_Services_all_variants
  build_Settings_all_variants
  build_TroubleShooting_all_variants
  build_UIFoundations_all_variants
  build_Utilities_all_variants
  build_VCard_all_variants
end

lane :build_all_subspecs_single_basic_variant do
  build_AccountDeletion_single_basic_variant
  build_AccountSwitcher_single_basic_variant
  build_APIClient_single_basic_variant
  build_Authentication_single_basic_variant
  build_Authentication_KeyGeneration_single_basic_variant
  build_Challenge_single_basic_variant
  build_Common_single_basic_variant
  build_CoreTranslation_single_basic_variant
  build_Crypto_single_basic_variant
  build_Crypto_VPN_single_basic_variant
  build_DataModel_single_basic_variant
  build_Doh_single_basic_variant
  build_Features_single_basic_variant
  build_ForceUpgrade_single_basic_variant
  build_Foundations_single_basic_variant
  build_Hash_single_basic_variant
  build_HumanVerification_single_basic_variant
  build_Keymaker_single_basic_variant
  build_KeyManager_single_basic_variant
  build_Log_single_basic_variant
  build_Login_single_basic_variant
  build_LoginUI_single_basic_variant
  build_Networking_single_basic_variant
  build_ObfuscatedConstants_single_basic_variant
  build_OpenPGP_single_basic_variant
  build_Payments_single_basic_variant
  build_PaymentsUI_single_basic_variant
  build_QuarkCommands_single_basic_variant
  build_Services_single_basic_variant
  build_Settings_single_basic_variant
  build_TroubleShooting_single_basic_variant
  build_UIFoundations_single_basic_variant
  build_Utilities_single_basic_variant
  build_VCard_single_basic_variant
end
